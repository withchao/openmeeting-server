syntax = "proto3";
import "sdkws/sdkws.proto";
package openmeeting.signal;

option go_package = "github.com/openimsdk/protocol/openmeeting/signal";

message UserInfo {
  string userID = 1;
  string nickname = 2;
  string account = 3;
}

message ParticipantMetaData {
  UserInfo userInfo = 1;
}

message GetJoinTokenReq{
  string room = 1;
  string identity = 2;
  ParticipantMetaData metaData = 3;
}

/*message NotifyMeetingHostData {
  string operatorUserID = 1;
  string operatorNickname = 2;
  string userID = 3;
  string hostType = 4;
}*/

message GetJoinTokenResp{
  string jwt = 1;
  string liveURL = 2;
}

message SignalReq {
  oneof payload {
    SignalInviteReq invite = 1;
    SignalInviteInGroupReq inviteInGroup= 2;
    SignalCancelReq cancel = 3;
    SignalAcceptReq accept = 4;
    SignalHungUpReq hungUp = 5;
    SignalRejectReq reject = 6;
    SignalGetTokenByRoomIDReq getTokenByRoomID = 7;
  }
}

message SignalSendCustomSignalReq {
  string roomID = 1;
  string customInfo = 2;
}

message SignalSendCustomSignalResp {
}

message SignalOperateStreamReq {
  string streamType = 1;
  string roomID = 2;
  string userID = 3;
  bool mute = 4;
  bool muteAll = 5;
}

message SignalOperateStreamResp {
}

message SignalOnStreamChangeReq {
  string roomID = 1;
  string streamType = 2;
  bool mute = 3;
}

message SignalResp {
  oneof payload {
    SignalInviteResp invite = 1;
    SignalInviteInGroupResp inviteInGroup= 2;
    SignalCancelResp cancel = 3;
    SignalAcceptResp accept = 4;
    SignalHungUpResp hungUp = 5;
    SignalRejectResp reject = 6;
    SignalGetTokenByRoomIDResp getTokenByRoomID = 7;
  }
}

message InvitationInfo  {
  string inviterUserID = 1;
  repeated string inviteeUserIDList = 2;
  string customData = 3;
  string  groupID = 4;
  string roomID = 5;
  int32 timeout = 6;
  string mediaType = 7;
  int32 platformID = 8;
  int32 sessionType = 9;
  int64 initiateTime = 10;
  repeated string busyLineUserIDList = 11;
}

message SignalInviteReq {
  InvitationInfo invitation = 1;
  openim.sdkws.OfflinePushInfo offlinePushInfo  = 2;
  ParticipantMetaData participant = 3;
  string userID = 4;
}

message SignalInviteResp {
  string token = 1;
  string roomID = 2;
  string liveURL = 3;
  repeated string busyLineUserIDList = 4;
}

message SignalInviteInGroupReq {
  InvitationInfo invitation = 1;
  openim.sdkws.OfflinePushInfo offlinePushInfo  = 2;
  ParticipantMetaData participant = 3;
  string userID = 4;
}

message SignalInviteInGroupResp {
  string token = 1;
  string roomID = 2;
  string liveURL = 3;
  repeated string busyLineUserIDList = 4;
}

message SignalCancelReq {
  InvitationInfo invitation = 1;
  openim.sdkws.OfflinePushInfo offlinePushInfo  = 2;
  ParticipantMetaData participant = 3;
  string userID = 4;
}

message SignalCancelResp {

}

message SignalAcceptReq {
  InvitationInfo invitation = 1;
  openim.sdkws.OfflinePushInfo offlinePushInfo  = 2;
  ParticipantMetaData participant = 3;
  int32 opUserPlatformID = 4;
  string userID = 5;
}

message SignalAcceptResp {
  string token = 1;
  string roomID = 2;
  string liveURL = 3;
}

message SignalHungUpReq {
  InvitationInfo invitation = 1;
  openim.sdkws.OfflinePushInfo offlinePushInfo  = 2;
  string userID = 3;
}

message SignalHungUpResp {

}

message SignalRejectReq {
  InvitationInfo invitation = 1;
  openim.sdkws.OfflinePushInfo offlinePushInfo  = 2;
  ParticipantMetaData participant = 3;
  int32 opUserPlatformID = 4;
  string userID = 5;
}

message SignalRejectResp {

}

message SignalGetRoomByGroupIDReq {
  string groupID = 1;
}

message SignalGetRoomByGroupIDResp {
  InvitationInfo invitation = 1;
  repeated ParticipantMetaData participant = 2;
  string roomID = 3;
}

message SignalOnRoomParticipantConnectedReq {
  InvitationInfo invitation = 1;
  repeated ParticipantMetaData participant = 2;
  string groupID = 3;
}

message SignalOnRoomParticipantDisconnectedReq {
  InvitationInfo invitation = 1;
  repeated ParticipantMetaData participant = 2;
  string groupID = 3;
}

message SignalGetTokenByRoomIDReq {
  string roomID = 1;
  ParticipantMetaData participant = 2;
  string userID = 3;
}

message SignalGetTokenByRoomIDResp {
  string token = 1;
  string liveURL = 2;
}

message SignalMessageAssembleReq {
  SignalReq signalReq = 1;
}

message SignalMessageAssembleResp {
  SignalResp signalResp = 1;
  openim.sdkws.MsgData msgData = 2;
}

message SignalGetRoomsReq {
  repeated string roomIDs = 1;
}

message SignalGetRoomsResp {
  repeated SignalGetRoomByGroupIDResp roomList = 1;
}


message GetSignalInvitationInfoReq {
  string roomID = 1;
}

message GetSignalInvitationInfoResp {
  InvitationInfo invitationInfo = 1;
  openim.sdkws.OfflinePushInfo offlinePushInfo = 2;
}

message GetSignalInvitationInfoStartAppReq {
  string userID = 1;
}

message GetSignalInvitationInfoStartAppResp {
  InvitationInfo invitation = 1;
  openim.sdkws.OfflinePushInfo offlinePushInfo = 2;
}

message SignalUser {
  string userID = 1;
  string nickname = 2;
  int32 status = 3;
}
//for signal end}

//add for import user info begin{
message UserBaseInfo {
  string userID = 1;
  string nickName = 2;
}

service Signal {
//  rpc SignalInvite(SignalInviteReq) returns(SignalInviteResp);
//  rpc SignalInviteInGroup(SignalInviteInGroupReq) returns(SignalInviteInGroupResp);
//  rpc SignalCancel(SignalCancelReq) returns(SignalCancelResp);
//  rpc SignalAccept(SignalAcceptReq) returns(SignalAcceptResp);
//  rpc SignalHungUp(SignalHungUpReq) returns(SignalHungUpResp);
//  rpc SignalReject(SignalRejectReq) returns(SignalRejectResp);



  rpc SignalMessageAssemble(SignalMessageAssembleReq) returns(SignalMessageAssembleResp);
  rpc SignalGetRoomByGroupID(SignalGetRoomByGroupIDReq) returns(SignalGetRoomByGroupIDResp);
  rpc SignalGetTokenByRoomID(SignalGetTokenByRoomIDReq) returns(SignalGetTokenByRoomIDResp);
  rpc SignalGetRooms(SignalGetRoomsReq) returns(SignalGetRoomsResp);

  rpc GetSignalInvitationInfo(GetSignalInvitationInfoReq) returns(GetSignalInvitationInfoResp);
  rpc GetSignalInvitationInfoStartApp(GetSignalInvitationInfoStartAppReq) returns(GetSignalInvitationInfoStartAppResp);
}